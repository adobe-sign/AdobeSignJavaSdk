/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.workflows;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LocaleFieldInfoDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:59.041+11:00")
public class LocaleFieldInfoDescription {
  @SerializedName("visible")
  private Boolean visible = null;

  @SerializedName("defaultValue")
  private String defaultValue = null;

  @SerializedName("editable")
  private Boolean editable = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("availableLocales")
  private List<String> availableLocales = null;

  public LocaleFieldInfoDescription visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Whether current field is visible or not. If visible attribute for this field is false then this field should not be visible in the agreement creation UI using this workflow to user
   * @return visible
  **/
  @ApiModelProperty(value = "Whether current field is visible or not. If visible attribute for this field is false then this field should not be visible in the agreement creation UI using this workflow to user")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public LocaleFieldInfoDescription defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * default value of the field if input for this field is not provided and this field is required
   * @return defaultValue
  **/
  @ApiModelProperty(value = "default value of the field if input for this field is not provided and this field is required")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public LocaleFieldInfoDescription editable(Boolean editable) {
    this.editable = editable;
    return this;
  }

   /**
   * Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation
   * @return editable
  **/
  @ApiModelProperty(value = "Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation")
  public Boolean isEditable() {
    return editable;
  }

  public void setEditable(Boolean editable) {
    this.editable = editable;
  }

  public LocaleFieldInfoDescription required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Whether this field is required or optional
   * @return required
  **/
  @ApiModelProperty(value = "Whether this field is required or optional")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public LocaleFieldInfoDescription availableLocales(List<String> availableLocales) {
    this.availableLocales = availableLocales;
    return this;
  }

  public LocaleFieldInfoDescription addAvailableLocalesItem(String availableLocalesItem) {
    if (this.availableLocales == null) {
      this.availableLocales = new ArrayList<String>();
    }
    this.availableLocales.add(availableLocalesItem);
    return this;
  }

   /**
   * Which locales can be chosen for this workflow
   * @return availableLocales
  **/
  @ApiModelProperty(value = "Which locales can be chosen for this workflow")
  public List<String> getAvailableLocales() {
    return availableLocales;
  }

  public void setAvailableLocales(List<String> availableLocales) {
    this.availableLocales = availableLocales;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocaleFieldInfoDescription localeFieldInfoDescription = (LocaleFieldInfoDescription) o;
    return Objects.equals(this.visible, localeFieldInfoDescription.visible) &&
        Objects.equals(this.defaultValue, localeFieldInfoDescription.defaultValue) &&
        Objects.equals(this.editable, localeFieldInfoDescription.editable) &&
        Objects.equals(this.required, localeFieldInfoDescription.required) &&
        Objects.equals(this.availableLocales, localeFieldInfoDescription.availableLocales);
  }

  @Override
  public int hashCode() {
    return Objects.hash(visible, defaultValue, editable, required, availableLocales);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocaleFieldInfoDescription {\n");
    
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    availableLocales: ").append(toIndentedString(availableLocales)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

