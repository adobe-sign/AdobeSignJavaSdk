/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.workflows;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RecipientsListInfoDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:59.041+11:00")
public class RecipientsListInfoDescription {
  @SerializedName("allowSender")
  private Boolean allowSender = null;

  @SerializedName("minListCount")
  private Integer minListCount = null;

  @SerializedName("visible")
  private Boolean visible = null;

  /**
   * authentication method for the current recipient list to have access to view and sign the document
   */
  @JsonAdapter(AuthenticationMethodEnum.Adapter.class)
  public enum AuthenticationMethodEnum {
    NONE("NONE"),
    
    KBA("KBA"),
    
    PASSWORD("PASSWORD"),
    
    WEB_IDENTITY("WEB_IDENTITY");

    private String value;

    AuthenticationMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationMethodEnum fromValue(String text) {
      for (AuthenticationMethodEnum b : AuthenticationMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AuthenticationMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AuthenticationMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("authenticationMethod")
  private AuthenticationMethodEnum authenticationMethod = null;

  @SerializedName("allowfax")
  private Boolean allowfax = null;

  @SerializedName("defaultValue")
  private String defaultValue = null;

  @SerializedName("editable")
  private Boolean editable = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("maxListCount")
  private Integer maxListCount = null;

  @SerializedName("label")
  private String label = null;

  public RecipientsListInfoDescription allowSender(Boolean allowSender) {
    this.allowSender = allowSender;
    return this;
  }

   /**
   * whether sender is allowed as a recipient
   * @return allowSender
  **/
  @ApiModelProperty(value = "whether sender is allowed as a recipient")
  public Boolean isAllowSender() {
    return allowSender;
  }

  public void setAllowSender(Boolean allowSender) {
    this.allowSender = allowSender;
  }

  public RecipientsListInfoDescription minListCount(Integer minListCount) {
    this.minListCount = minListCount;
    return this;
  }

   /**
   * minimum number of entries allowed in the current recipient list
   * @return minListCount
  **/
  @ApiModelProperty(value = "minimum number of entries allowed in the current recipient list")
  public Integer getMinListCount() {
    return minListCount;
  }

  public void setMinListCount(Integer minListCount) {
    this.minListCount = minListCount;
  }

  public RecipientsListInfoDescription visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Whether current field is visible. If visible attribute for this field is false then this field should not be shown in the agreement creation UI using this workflow to user
   * @return visible
  **/
  @ApiModelProperty(value = "Whether current field is visible. If visible attribute for this field is false then this field should not be shown in the agreement creation UI using this workflow to user")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public RecipientsListInfoDescription authenticationMethod(AuthenticationMethodEnum authenticationMethod) {
    this.authenticationMethod = authenticationMethod;
    return this;
  }

   /**
   * authentication method for the current recipient list to have access to view and sign the document
   * @return authenticationMethod
  **/
  @ApiModelProperty(value = "authentication method for the current recipient list to have access to view and sign the document")
  public AuthenticationMethodEnum getAuthenticationMethod() {
    return authenticationMethod;
  }

  public void setAuthenticationMethod(AuthenticationMethodEnum authenticationMethod) {
    this.authenticationMethod = authenticationMethod;
  }

  public RecipientsListInfoDescription allowfax(Boolean allowfax) {
    this.allowfax = allowfax;
    return this;
  }

   /**
   * whether fax is allowed or not
   * @return allowfax
  **/
  @ApiModelProperty(value = "whether fax is allowed or not")
  public Boolean isAllowfax() {
    return allowfax;
  }

  public void setAllowfax(Boolean allowfax) {
    this.allowfax = allowfax;
  }

  public RecipientsListInfoDescription defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * A default  email or fax number
   * @return defaultValue
  **/
  @ApiModelProperty(value = "A default  email or fax number")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public RecipientsListInfoDescription editable(Boolean editable) {
    this.editable = editable;
    return this;
  }

   /**
   * Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation
   * @return editable
  **/
  @ApiModelProperty(value = "Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation")
  public Boolean isEditable() {
    return editable;
  }

  public void setEditable(Boolean editable) {
    this.editable = editable;
  }

  public RecipientsListInfoDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the current RecipientInfo list
   * @return name
  **/
  @ApiModelProperty(value = "Name of the current RecipientInfo list")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RecipientsListInfoDescription maxListCount(Integer maxListCount) {
    this.maxListCount = maxListCount;
    return this;
  }

   /**
   * maximum number of entries allowed in the current recipient list
   * @return maxListCount
  **/
  @ApiModelProperty(value = "maximum number of entries allowed in the current recipient list")
  public Integer getMaxListCount() {
    return maxListCount;
  }

  public void setMaxListCount(Integer maxListCount) {
    this.maxListCount = maxListCount;
  }

  public RecipientsListInfoDescription label(String label) {
    this.label = label;
    return this;
  }

   /**
   * A display text for the workflow user that can be used for the current recipients list
   * @return label
  **/
  @ApiModelProperty(value = "A display text for the workflow user that can be used for the current recipients list")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipientsListInfoDescription recipientsListInfoDescription = (RecipientsListInfoDescription) o;
    return Objects.equals(this.allowSender, recipientsListInfoDescription.allowSender) &&
        Objects.equals(this.minListCount, recipientsListInfoDescription.minListCount) &&
        Objects.equals(this.visible, recipientsListInfoDescription.visible) &&
        Objects.equals(this.authenticationMethod, recipientsListInfoDescription.authenticationMethod) &&
        Objects.equals(this.allowfax, recipientsListInfoDescription.allowfax) &&
        Objects.equals(this.defaultValue, recipientsListInfoDescription.defaultValue) &&
        Objects.equals(this.editable, recipientsListInfoDescription.editable) &&
        Objects.equals(this.name, recipientsListInfoDescription.name) &&
        Objects.equals(this.maxListCount, recipientsListInfoDescription.maxListCount) &&
        Objects.equals(this.label, recipientsListInfoDescription.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowSender, minListCount, visible, authenticationMethod, allowfax, defaultValue, editable, name, maxListCount, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipientsListInfoDescription {\n");
    
    sb.append("    allowSender: ").append(toIndentedString(allowSender)).append("\n");
    sb.append("    minListCount: ").append(toIndentedString(minListCount)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    authenticationMethod: ").append(toIndentedString(authenticationMethod)).append("\n");
    sb.append("    allowfax: ").append(toIndentedString(allowfax)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    maxListCount: ").append(toIndentedString(maxListCount)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

