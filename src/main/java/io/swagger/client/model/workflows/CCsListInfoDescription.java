/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.workflows;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CCsListInfoDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:59.041+11:00")
public class CCsListInfoDescription {
  @SerializedName("minListCount")
  private Integer minListCount = null;

  @SerializedName("visible")
  private Boolean visible = null;

  @SerializedName("editable")
  private Boolean editable = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("defaultValues")
  private List<String> defaultValues = null;

  @SerializedName("maxListCount")
  private Integer maxListCount = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("required")
  private Boolean required = null;

  public CCsListInfoDescription minListCount(Integer minListCount) {
    this.minListCount = minListCount;
    return this;
  }

   /**
   * minimum number of entries allowed in the current CC list
   * @return minListCount
  **/
  @ApiModelProperty(value = "minimum number of entries allowed in the current CC list")
  public Integer getMinListCount() {
    return minListCount;
  }

  public void setMinListCount(Integer minListCount) {
    this.minListCount = minListCount;
  }

  public CCsListInfoDescription visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Whether current field is visible or not. If visible attribute for this field is false then this field should not be shown in the agreement creation page using this workflow
   * @return visible
  **/
  @ApiModelProperty(value = "Whether current field is visible or not. If visible attribute for this field is false then this field should not be shown in the agreement creation page using this workflow")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public CCsListInfoDescription editable(Boolean editable) {
    this.editable = editable;
    return this;
  }

   /**
   * Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation
   * @return editable
  **/
  @ApiModelProperty(value = "Whether current field can be edited. If editable attribute for this field is false then this field should not be provided in the agreement creation request and default value of this field will be used in agreement creation")
  public Boolean isEditable() {
    return editable;
  }

  public void setEditable(Boolean editable) {
    this.editable = editable;
  }

  public CCsListInfoDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the current CC list
   * @return name
  **/
  @ApiModelProperty(value = "Name of the current CC list")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CCsListInfoDescription defaultValues(List<String> defaultValues) {
    this.defaultValues = defaultValues;
    return this;
  }

  public CCsListInfoDescription addDefaultValuesItem(String defaultValuesItem) {
    if (this.defaultValues == null) {
      this.defaultValues = new ArrayList<String>();
    }
    this.defaultValues.add(defaultValuesItem);
    return this;
  }

   /**
   * An array of default emails that will be used if no input is provided for this list element.
   * @return defaultValues
  **/
  @ApiModelProperty(value = "An array of default emails that will be used if no input is provided for this list element.")
  public List<String> getDefaultValues() {
    return defaultValues;
  }

  public void setDefaultValues(List<String> defaultValues) {
    this.defaultValues = defaultValues;
  }

  public CCsListInfoDescription maxListCount(Integer maxListCount) {
    this.maxListCount = maxListCount;
    return this;
  }

   /**
   * maximum number of entries allowed in the current CC list
   * @return maxListCount
  **/
  @ApiModelProperty(value = "maximum number of entries allowed in the current CC list")
  public Integer getMaxListCount() {
    return maxListCount;
  }

  public void setMaxListCount(Integer maxListCount) {
    this.maxListCount = maxListCount;
  }

  public CCsListInfoDescription label(String label) {
    this.label = label;
    return this;
  }

   /**
   * A display text for the workflow user that can be used for the current CC list
   * @return label
  **/
  @ApiModelProperty(value = "A display text for the workflow user that can be used for the current CC list")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public CCsListInfoDescription required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Whether this field is required or optional
   * @return required
  **/
  @ApiModelProperty(value = "Whether this field is required or optional")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CCsListInfoDescription ccsListInfoDescription = (CCsListInfoDescription) o;
    return Objects.equals(this.minListCount, ccsListInfoDescription.minListCount) &&
        Objects.equals(this.visible, ccsListInfoDescription.visible) &&
        Objects.equals(this.editable, ccsListInfoDescription.editable) &&
        Objects.equals(this.name, ccsListInfoDescription.name) &&
        Objects.equals(this.defaultValues, ccsListInfoDescription.defaultValues) &&
        Objects.equals(this.maxListCount, ccsListInfoDescription.maxListCount) &&
        Objects.equals(this.label, ccsListInfoDescription.label) &&
        Objects.equals(this.required, ccsListInfoDescription.required);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minListCount, visible, editable, name, defaultValues, maxListCount, label, required);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CCsListInfoDescription {\n");
    
    sb.append("    minListCount: ").append(toIndentedString(minListCount)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    defaultValues: ").append(toIndentedString(defaultValues)).append("\n");
    sb.append("    maxListCount: ").append(toIndentedString(maxListCount)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

