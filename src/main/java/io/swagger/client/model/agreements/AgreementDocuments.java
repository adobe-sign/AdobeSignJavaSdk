/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.agreements.Document;
import io.swagger.client.model.agreements.SupportingDocument;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AgreementDocuments
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class AgreementDocuments {
  @SerializedName("documents")
  private List<Document> documents = null;

  @SerializedName("supportingDocuments")
  private List<SupportingDocument> supportingDocuments = null;

  public AgreementDocuments documents(List<Document> documents) {
    this.documents = documents;
    return this;
  }

  public AgreementDocuments addDocumentsItem(Document documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Document>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * A list of documents
   * @return documents
  **/
  @ApiModelProperty(value = "A list of documents")
  public List<Document> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Document> documents) {
    this.documents = documents;
  }

  public AgreementDocuments supportingDocuments(List<SupportingDocument> supportingDocuments) {
    this.supportingDocuments = supportingDocuments;
    return this;
  }

  public AgreementDocuments addSupportingDocumentsItem(SupportingDocument supportingDocumentsItem) {
    if (this.supportingDocuments == null) {
      this.supportingDocuments = new ArrayList<SupportingDocument>();
    }
    this.supportingDocuments.add(supportingDocumentsItem);
    return this;
  }

   /**
   * A list of supporting documents
   * @return supportingDocuments
  **/
  @ApiModelProperty(value = "A list of supporting documents")
  public List<SupportingDocument> getSupportingDocuments() {
    return supportingDocuments;
  }

  public void setSupportingDocuments(List<SupportingDocument> supportingDocuments) {
    this.supportingDocuments = supportingDocuments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgreementDocuments agreementDocuments = (AgreementDocuments) o;
    return Objects.equals(this.documents, agreementDocuments.documents) &&
        Objects.equals(this.supportingDocuments, agreementDocuments.supportingDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documents, supportingDocuments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgreementDocuments {\n");
    
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    supportingDocuments: ").append(toIndentedString(supportingDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

