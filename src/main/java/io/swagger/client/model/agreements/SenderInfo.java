/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * SenderInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class SenderInfo {
  @SerializedName("participantId")
  private String participantId = null;

  @SerializedName("createdDate")
  private Date createdDate = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("self")
  private Boolean self = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("email")
  private String email = null;

  /**
   * The agreement status with respect to the participant set. This cannot be changed as part of the PUT call.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    CANCELLED("CANCELLED"),
    
    COMPLETED("COMPLETED"),
    
    EXPIRED("EXPIRED"),
    
    NOT_YET_VISIBLE("NOT_YET_VISIBLE"),
    
    WAITING_FOR_AUTHORING("WAITING_FOR_AUTHORING"),
    
    WAITING_FOR_MY_DELEGATION("WAITING_FOR_MY_DELEGATION"),
    
    WAITING_FOR_MY_ACCEPTANCE("WAITING_FOR_MY_ACCEPTANCE"),
    
    WAITING_FOR_MY_ACKNOWLEDGEMENT("WAITING_FOR_MY_ACKNOWLEDGEMENT"),
    
    WAITING_FOR_MY_APPROVAL("WAITING_FOR_MY_APPROVAL"),
    
    WAITING_FOR_MY_FORM_FILLING("WAITING_FOR_MY_FORM_FILLING"),
    
    WAITING_FOR_MY_SIGNATURE("WAITING_FOR_MY_SIGNATURE"),
    
    WAITING_FOR_OTHERS("WAITING_FOR_OTHERS");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public SenderInfo participantId(String participantId) {
    this.participantId = participantId;
    return this;
  }

   /**
   *  The unique identifier of the sender of the agreement.
   * @return participantId
  **/
  @ApiModelProperty(value = " The unique identifier of the sender of the agreement.")
  public String getParticipantId() {
    return participantId;
  }

  public void setParticipantId(String participantId) {
    this.participantId = participantId;
  }

  public SenderInfo createdDate(Date createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * The date when the sender was added. This will be returned as part of GET call but is ignored if passed as part of PUT call.
   * @return createdDate
  **/
  @ApiModelProperty(value = "The date when the sender was added. This will be returned as part of GET call but is ignored if passed as part of PUT call.")
  public Date getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Date createdDate) {
    this.createdDate = createdDate;
  }

  public SenderInfo hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * True if the agreement is hidden for the user that is calling the API. Only returned if self is true.
   * @return hidden
  **/
  @ApiModelProperty(value = "True if the agreement is hidden for the user that is calling the API. Only returned if self is true.")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public SenderInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the sender, if available.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the sender, if available.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SenderInfo self(Boolean self) {
    this.self = self;
    return this;
  }

   /**
   * True if the sender is the same user that is calling the API.
   * @return self
  **/
  @ApiModelProperty(value = "True if the sender is the same user that is calling the API.")
  public Boolean isSelf() {
    return self;
  }

  public void setSelf(Boolean self) {
    this.self = self;
  }

  public SenderInfo company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Company of the sender, if available.
   * @return company
  **/
  @ApiModelProperty(value = "Company of the sender, if available.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public SenderInfo userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The user ID of the sender. This will be returned as part of GET call but is ignored if passed as part of PUT call.
   * @return userId
  **/
  @ApiModelProperty(value = "The user ID of the sender. This will be returned as part of GET call but is ignored if passed as part of PUT call.")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public SenderInfo email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email of the sender of the agreement.
   * @return email
  **/
  @ApiModelProperty(value = "Email of the sender of the agreement.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public SenderInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The agreement status with respect to the participant set. This cannot be changed as part of the PUT call.
   * @return status
  **/
  @ApiModelProperty(value = "The agreement status with respect to the participant set. This cannot be changed as part of the PUT call.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SenderInfo senderInfo = (SenderInfo) o;
    return Objects.equals(this.participantId, senderInfo.participantId) &&
        Objects.equals(this.createdDate, senderInfo.createdDate) &&
        Objects.equals(this.hidden, senderInfo.hidden) &&
        Objects.equals(this.name, senderInfo.name) &&
        Objects.equals(this.self, senderInfo.self) &&
        Objects.equals(this.company, senderInfo.company) &&
        Objects.equals(this.userId, senderInfo.userId) &&
        Objects.equals(this.email, senderInfo.email) &&
        Objects.equals(this.status, senderInfo.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(participantId, createdDate, hidden, name, self, company, userId, email, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SenderInfo {\n");
    
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

