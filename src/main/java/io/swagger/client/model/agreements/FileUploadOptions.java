/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FileUploadOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class FileUploadOptions {
  @SerializedName("canEditFiles")
  private Boolean canEditFiles = null;

  @SerializedName("localFile")
  private Boolean localFile = null;

  @SerializedName("webConnectors")
  private Boolean webConnectors = null;

  @SerializedName("libraryDocument")
  private Boolean libraryDocument = null;

  public FileUploadOptions canEditFiles(Boolean canEditFiles) {
    this.canEditFiles = canEditFiles;
    return this;
  }

   /**
   * Whether the file upload section can be edited by adding or removing files. Default value is taken as true. Changing the default value will alter the compose page view configuration for this agreement, but is not an access control mechanism
   * @return canEditFiles
  **/
  @ApiModelProperty(value = "Whether the file upload section can be edited by adding or removing files. Default value is taken as true. Changing the default value will alter the compose page view configuration for this agreement, but is not an access control mechanism")
  public Boolean isCanEditFiles() {
    return canEditFiles;
  }

  public void setCanEditFiles(Boolean canEditFiles) {
    this.canEditFiles = canEditFiles;
  }

  public FileUploadOptions localFile(Boolean localFile) {
    this.localFile = localFile;
    return this;
  }

   /**
   * Whether local file upload button should appear or not. Default value is taken as true
   * @return localFile
  **/
  @ApiModelProperty(value = "Whether local file upload button should appear or not. Default value is taken as true")
  public Boolean isLocalFile() {
    return localFile;
  }

  public void setLocalFile(Boolean localFile) {
    this.localFile = localFile;
  }

  public FileUploadOptions webConnectors(Boolean webConnectors) {
    this.webConnectors = webConnectors;
    return this;
  }

   /**
   * Whether link to attach documents from web sources like Dropbox should appear or not. Default value is taken as true
   * @return webConnectors
  **/
  @ApiModelProperty(value = "Whether link to attach documents from web sources like Dropbox should appear or not. Default value is taken as true")
  public Boolean isWebConnectors() {
    return webConnectors;
  }

  public void setWebConnectors(Boolean webConnectors) {
    this.webConnectors = webConnectors;
  }

  public FileUploadOptions libraryDocument(Boolean libraryDocument) {
    this.libraryDocument = libraryDocument;
    return this;
  }

   /**
   * Whether library documents link should appear or not. Default value is taken as true
   * @return libraryDocument
  **/
  @ApiModelProperty(value = "Whether library documents link should appear or not. Default value is taken as true")
  public Boolean isLibraryDocument() {
    return libraryDocument;
  }

  public void setLibraryDocument(Boolean libraryDocument) {
    this.libraryDocument = libraryDocument;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileUploadOptions fileUploadOptions = (FileUploadOptions) o;
    return Objects.equals(this.canEditFiles, fileUploadOptions.canEditFiles) &&
        Objects.equals(this.localFile, fileUploadOptions.localFile) &&
        Objects.equals(this.webConnectors, fileUploadOptions.webConnectors) &&
        Objects.equals(this.libraryDocument, fileUploadOptions.libraryDocument);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canEditFiles, localFile, webConnectors, libraryDocument);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileUploadOptions {\n");
    
    sb.append("    canEditFiles: ").append(toIndentedString(canEditFiles)).append("\n");
    sb.append("    localFile: ").append(toIndentedString(localFile)).append("\n");
    sb.append("    webConnectors: ").append(toIndentedString(webConnectors)).append("\n");
    sb.append("    libraryDocument: ").append(toIndentedString(libraryDocument)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

