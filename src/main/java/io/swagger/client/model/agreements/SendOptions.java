/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SendOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class SendOptions {
  /**
   * Control notification mails for Agreement initiation events - ACTION_REQUESTED and CREATED
   */
  @JsonAdapter(InitEmailsEnum.Adapter.class)
  public enum InitEmailsEnum {
    ALL("ALL"),
    
    NONE("NONE");

    private String value;

    InitEmailsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InitEmailsEnum fromValue(String text) {
      for (InitEmailsEnum b : InitEmailsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InitEmailsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InitEmailsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InitEmailsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InitEmailsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("initEmails")
  private InitEmailsEnum initEmails = null;

  /**
   * Control notification mails for agreement-in-process events - DELEGATED, REPLACED
   */
  @JsonAdapter(InFlightEmailsEnum.Adapter.class)
  public enum InFlightEmailsEnum {
    ALL("ALL"),
    
    NONE("NONE");

    private String value;

    InFlightEmailsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InFlightEmailsEnum fromValue(String text) {
      for (InFlightEmailsEnum b : InFlightEmailsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InFlightEmailsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InFlightEmailsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InFlightEmailsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InFlightEmailsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("inFlightEmails")
  private InFlightEmailsEnum inFlightEmails = null;

  /**
   * Control notification mails for agreement completion events - COMPLETED, CANCELLED, EXPIRED and REJECTED
   */
  @JsonAdapter(CompletionEmailsEnum.Adapter.class)
  public enum CompletionEmailsEnum {
    ALL("ALL"),
    
    NONE("NONE");

    private String value;

    CompletionEmailsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CompletionEmailsEnum fromValue(String text) {
      for (CompletionEmailsEnum b : CompletionEmailsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CompletionEmailsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CompletionEmailsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CompletionEmailsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CompletionEmailsEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("completionEmails")
  private CompletionEmailsEnum completionEmails = null;

  public SendOptions initEmails(InitEmailsEnum initEmails) {
    this.initEmails = initEmails;
    return this;
  }

   /**
   * Control notification mails for Agreement initiation events - ACTION_REQUESTED and CREATED
   * @return initEmails
  **/
  @ApiModelProperty(value = "Control notification mails for Agreement initiation events - ACTION_REQUESTED and CREATED")
  public InitEmailsEnum getInitEmails() {
    return initEmails;
  }

  public void setInitEmails(InitEmailsEnum initEmails) {
    this.initEmails = initEmails;
  }

  public SendOptions inFlightEmails(InFlightEmailsEnum inFlightEmails) {
    this.inFlightEmails = inFlightEmails;
    return this;
  }

   /**
   * Control notification mails for agreement-in-process events - DELEGATED, REPLACED
   * @return inFlightEmails
  **/
  @ApiModelProperty(value = "Control notification mails for agreement-in-process events - DELEGATED, REPLACED")
  public InFlightEmailsEnum getInFlightEmails() {
    return inFlightEmails;
  }

  public void setInFlightEmails(InFlightEmailsEnum inFlightEmails) {
    this.inFlightEmails = inFlightEmails;
  }

  public SendOptions completionEmails(CompletionEmailsEnum completionEmails) {
    this.completionEmails = completionEmails;
    return this;
  }

   /**
   * Control notification mails for agreement completion events - COMPLETED, CANCELLED, EXPIRED and REJECTED
   * @return completionEmails
  **/
  @ApiModelProperty(value = "Control notification mails for agreement completion events - COMPLETED, CANCELLED, EXPIRED and REJECTED")
  public CompletionEmailsEnum getCompletionEmails() {
    return completionEmails;
  }

  public void setCompletionEmails(CompletionEmailsEnum completionEmails) {
    this.completionEmails = completionEmails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendOptions sendOptions = (SendOptions) o;
    return Objects.equals(this.initEmails, sendOptions.initEmails) &&
        Objects.equals(this.inFlightEmails, sendOptions.inFlightEmails) &&
        Objects.equals(this.completionEmails, sendOptions.completionEmails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initEmails, inFlightEmails, completionEmails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendOptions {\n");
    
    sb.append("    initEmails: ").append(toIndentedString(initEmails)).append("\n");
    sb.append("    inFlightEmails: ").append(toIndentedString(inFlightEmails)).append("\n");
    sb.append("    completionEmails: ").append(toIndentedString(completionEmails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

