/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SupportingDocument
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class SupportingDocument {
  @SerializedName("displayLabel")
  private String displayLabel = null;

  @SerializedName("participantId")
  private String participantId = null;

  @SerializedName("numPages")
  private Integer numPages = null;

  @SerializedName("fieldName")
  private String fieldName = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("mimeType")
  private String mimeType = null;

  public SupportingDocument displayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
    return this;
  }

   /**
   * Display name of the document
   * @return displayLabel
  **/
  @ApiModelProperty(value = "Display name of the document")
  public String getDisplayLabel() {
    return displayLabel;
  }

  public void setDisplayLabel(String displayLabel) {
    this.displayLabel = displayLabel;
  }

  public SupportingDocument participantId(String participantId) {
    this.participantId = participantId;
    return this;
  }

   /**
   * The unique identifier of the participant that uploaded the supporting document
   * @return participantId
  **/
  @ApiModelProperty(value = "The unique identifier of the participant that uploaded the supporting document")
  public String getParticipantId() {
    return participantId;
  }

  public void setParticipantId(String participantId) {
    this.participantId = participantId;
  }

  public SupportingDocument numPages(Integer numPages) {
    this.numPages = numPages;
    return this;
  }

   /**
   * Number of pages in the document
   * @return numPages
  **/
  @ApiModelProperty(value = "Number of pages in the document")
  public Integer getNumPages() {
    return numPages;
  }

  public void setNumPages(Integer numPages) {
    this.numPages = numPages;
  }

  public SupportingDocument fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * The name of the supporting document field
   * @return fieldName
  **/
  @ApiModelProperty(value = "The name of the supporting document field")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public SupportingDocument id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id representing the document
   * @return id
  **/
  @ApiModelProperty(value = "Id representing the document")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SupportingDocument mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Mime-type of the document
   * @return mimeType
  **/
  @ApiModelProperty(value = "Mime-type of the document")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportingDocument supportingDocument = (SupportingDocument) o;
    return Objects.equals(this.displayLabel, supportingDocument.displayLabel) &&
        Objects.equals(this.participantId, supportingDocument.participantId) &&
        Objects.equals(this.numPages, supportingDocument.numPages) &&
        Objects.equals(this.fieldName, supportingDocument.fieldName) &&
        Objects.equals(this.id, supportingDocument.id) &&
        Objects.equals(this.mimeType, supportingDocument.mimeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayLabel, participantId, numPages, fieldName, id, mimeType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportingDocument {\n");
    
    sb.append("    displayLabel: ").append(toIndentedString(displayLabel)).append("\n");
    sb.append("    participantId: ").append(toIndentedString(participantId)).append("\n");
    sb.append("    numPages: ").append(toIndentedString(numPages)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

