/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.agreements.DisplayParticipantSetInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * UserAgreement
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:34.872+11:00")
public class UserAgreement {
  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("displayDate")
  private Date displayDate = null;

  @SerializedName("groupId")
  private String groupId = null;

  @SerializedName("esign")
  private Boolean esign = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("displayParticipantSetInfos")
  private List<DisplayParticipantSetInfo> displayParticipantSetInfos = null;

  @SerializedName("latestVersionId")
  private String latestVersionId = null;

  @SerializedName("id")
  private String id = null;

  /**
   * The kind of agreement
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AGREEMENT("AGREEMENT"),
    
    MEGASIGN_CHILD("MEGASIGN_CHILD"),
    
    WIDGET_INSTANCE("WIDGET_INSTANCE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("parentId")
  private String parentId = null;

  /**
   * This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    WAITING_FOR_MY_SIGNATURE("WAITING_FOR_MY_SIGNATURE"),
    
    WAITING_FOR_MY_APPROVAL("WAITING_FOR_MY_APPROVAL"),
    
    WAITING_FOR_MY_DELEGATION("WAITING_FOR_MY_DELEGATION"),
    
    WAITING_FOR_MY_ACKNOWLEDGEMENT("WAITING_FOR_MY_ACKNOWLEDGEMENT"),
    
    WAITING_FOR_MY_ACCEPTANCE("WAITING_FOR_MY_ACCEPTANCE"),
    
    WAITING_FOR_MY_FORM_FILLING("WAITING_FOR_MY_FORM_FILLING"),
    
    OUT_FOR_SIGNATURE("OUT_FOR_SIGNATURE"),
    
    OUT_FOR_APPROVAL("OUT_FOR_APPROVAL"),
    
    OUT_FOR_DELIVERY("OUT_FOR_DELIVERY"),
    
    OUT_FOR_ACCEPTANCE("OUT_FOR_ACCEPTANCE"),
    
    OUT_FOR_FORM_FILLING("OUT_FOR_FORM_FILLING"),
    
    SIGNED("SIGNED"),
    
    APPROVED("APPROVED"),
    
    FORM_FILLED("FORM_FILLED"),
    
    DELIVERED("DELIVERED"),
    
    ACCEPTED("ACCEPTED"),
    
    ARCHIVED("ARCHIVED"),
    
    CANCELLED("CANCELLED"),
    
    EXPIRED("EXPIRED"),
    
    WAITING_FOR_AUTHORING("WAITING_FOR_AUTHORING"),
    
    WAITING_FOR_PREFILL("WAITING_FOR_PREFILL"),
    
    DRAFT("DRAFT"),
    
    DOCUMENTS_NOT_YET_PROCESSED("DOCUMENTS_NOT_YET_PROCESSED"),
    
    WAITING_FOR_MY_VERIFICATION("WAITING_FOR_MY_VERIFICATION"),
    
    WAITING_FOR_VERIFICATION("WAITING_FOR_VERIFICATION");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public UserAgreement hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * True if agreement is hidden for the user
   * @return hidden
  **/
  @ApiModelProperty(value = "True if agreement is hidden for the user")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public UserAgreement displayDate(Date displayDate) {
    this.displayDate = displayDate;
    return this;
  }

   /**
   * The display date for the agreement. Format would be yyyy-MM-dd&#39;T&#39;HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time
   * @return displayDate
  **/
  @ApiModelProperty(value = "The display date for the agreement. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time")
  public Date getDisplayDate() {
    return displayDate;
  }

  public void setDisplayDate(Date displayDate) {
    this.displayDate = displayDate;
  }

  public UserAgreement groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Unique identifier of the group
   * @return groupId
  **/
  @ApiModelProperty(value = "Unique identifier of the group")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public UserAgreement esign(Boolean esign) {
    this.esign = esign;
    return this;
  }

   /**
   * True if this is an e-sign document
   * @return esign
  **/
  @ApiModelProperty(value = "True if this is an e-sign document")
  public Boolean isEsign() {
    return esign;
  }

  public void setEsign(Boolean esign) {
    this.esign = esign;
  }

  public UserAgreement name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Agreement
   * @return name
  **/
  @ApiModelProperty(value = "Name of the Agreement")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserAgreement displayParticipantSetInfos(List<DisplayParticipantSetInfo> displayParticipantSetInfos) {
    this.displayParticipantSetInfos = displayParticipantSetInfos;
    return this;
  }

  public UserAgreement addDisplayParticipantSetInfosItem(DisplayParticipantSetInfo displayParticipantSetInfosItem) {
    if (this.displayParticipantSetInfos == null) {
      this.displayParticipantSetInfos = new ArrayList<DisplayParticipantSetInfo>();
    }
    this.displayParticipantSetInfos.add(displayParticipantSetInfosItem);
    return this;
  }

   /**
   * The most relevant current user set for the agreement. It is typically the next signer if the agreement is from the current user, or the sender if received from another user
   * @return displayParticipantSetInfos
  **/
  @ApiModelProperty(value = "The most relevant current user set for the agreement. It is typically the next signer if the agreement is from the current user, or the sender if received from another user")
  public List<DisplayParticipantSetInfo> getDisplayParticipantSetInfos() {
    return displayParticipantSetInfos;
  }

  public void setDisplayParticipantSetInfos(List<DisplayParticipantSetInfo> displayParticipantSetInfos) {
    this.displayParticipantSetInfos = displayParticipantSetInfos;
  }

  public UserAgreement latestVersionId(String latestVersionId) {
    this.latestVersionId = latestVersionId;
    return this;
  }

   /**
   * A version ID which uniquely identifies the current version of the agreement
   * @return latestVersionId
  **/
  @ApiModelProperty(value = "A version ID which uniquely identifies the current version of the agreement")
  public String getLatestVersionId() {
    return latestVersionId;
  }

  public void setLatestVersionId(String latestVersionId) {
    this.latestVersionId = latestVersionId;
  }

  public UserAgreement id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the agreement.If provided in POST, it will simply be ignored
   * @return id
  **/
  @ApiModelProperty(value = "The unique identifier of the agreement.If provided in POST, it will simply be ignored")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UserAgreement type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The kind of agreement
   * @return type
  **/
  @ApiModelProperty(value = "The kind of agreement")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public UserAgreement parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * The parent id of a megaSign child *OR* the originating id of a widget agreement instance
   * @return parentId
  **/
  @ApiModelProperty(value = "The parent id of a megaSign child *OR* the originating id of a widget agreement instance")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public UserAgreement status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller
   * @return status
  **/
  @ApiModelProperty(value = "This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAgreement userAgreement = (UserAgreement) o;
    return Objects.equals(this.hidden, userAgreement.hidden) &&
        Objects.equals(this.displayDate, userAgreement.displayDate) &&
        Objects.equals(this.groupId, userAgreement.groupId) &&
        Objects.equals(this.esign, userAgreement.esign) &&
        Objects.equals(this.name, userAgreement.name) &&
        Objects.equals(this.displayParticipantSetInfos, userAgreement.displayParticipantSetInfos) &&
        Objects.equals(this.latestVersionId, userAgreement.latestVersionId) &&
        Objects.equals(this.id, userAgreement.id) &&
        Objects.equals(this.type, userAgreement.type) &&
        Objects.equals(this.parentId, userAgreement.parentId) &&
        Objects.equals(this.status, userAgreement.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hidden, displayDate, groupId, esign, name, displayParticipantSetInfos, latestVersionId, id, type, parentId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAgreement {\n");
    
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    displayDate: ").append(toIndentedString(displayDate)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    esign: ").append(toIndentedString(esign)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayParticipantSetInfos: ").append(toIndentedString(displayParticipantSetInfos)).append("\n");
    sb.append("    latestVersionId: ").append(toIndentedString(latestVersionId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

