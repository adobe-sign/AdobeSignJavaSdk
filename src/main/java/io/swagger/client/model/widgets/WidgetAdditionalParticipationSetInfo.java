/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.widgets;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.widgets.ParticipantSetMemberInfo;
import io.swagger.client.model.widgets.ProviderParticipantSetInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WidgetAdditionalParticipationSetInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:55.369+11:00")
public class WidgetAdditionalParticipationSetInfo {
  @SerializedName("providerParticipantSetInfo")
  private ProviderParticipantSetInfo providerParticipantSetInfo = null;

  /**
   * Role assumed by all participants in the set (signer, approver, etc.) Web Form First Participant will only have roles - Signer, Approver, Acceptor and Form Filler
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    SIGNER("SIGNER"),
    
    DELEGATE_TO_SIGNER("DELEGATE_TO_SIGNER"),
    
    APPROVER("APPROVER"),
    
    DELEGATE_TO_APPROVER("DELEGATE_TO_APPROVER"),
    
    ACCEPTOR("ACCEPTOR"),
    
    DELEGATE_TO_ACCEPTOR("DELEGATE_TO_ACCEPTOR"),
    
    FORM_FILLER("FORM_FILLER"),
    
    DELEGATE_TO_FORM_FILLER("DELEGATE_TO_FORM_FILLER"),
    
    CERTIFIED_RECIPIENT("CERTIFIED_RECIPIENT"),
    
    DELEGATE_TO_CERTIFIED_RECIPIENT("DELEGATE_TO_CERTIFIED_RECIPIENT");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleEnum fromValue(String text) {
      for (RoleEnum b : RoleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RoleEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("role")
  private RoleEnum role = null;

  @SerializedName("memberInfos")
  private List<ParticipantSetMemberInfo> memberInfos = null;

  @SerializedName("order")
  private Integer order = null;

  public WidgetAdditionalParticipationSetInfo providerParticipantSetInfo(ProviderParticipantSetInfo providerParticipantSetInfo) {
    this.providerParticipantSetInfo = providerParticipantSetInfo;
    return this;
  }

   /**
   * Represents all the attributes related to the unknown participant and its provider. If it is defined then the participant will be treated as an unknown participant.
   * @return providerParticipantSetInfo
  **/
  @ApiModelProperty(value = "Represents all the attributes related to the unknown participant and its provider. If it is defined then the participant will be treated as an unknown participant.")
  public ProviderParticipantSetInfo getProviderParticipantSetInfo() {
    return providerParticipantSetInfo;
  }

  public void setProviderParticipantSetInfo(ProviderParticipantSetInfo providerParticipantSetInfo) {
    this.providerParticipantSetInfo = providerParticipantSetInfo;
  }

  public WidgetAdditionalParticipationSetInfo role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Role assumed by all participants in the set (signer, approver, etc.) Web Form First Participant will only have roles - Signer, Approver, Acceptor and Form Filler
   * @return role
  **/
  @ApiModelProperty(value = "Role assumed by all participants in the set (signer, approver, etc.) Web Form First Participant will only have roles - Signer, Approver, Acceptor and Form Filler")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public WidgetAdditionalParticipationSetInfo memberInfos(List<ParticipantSetMemberInfo> memberInfos) {
    this.memberInfos = memberInfos;
    return this;
  }

  public WidgetAdditionalParticipationSetInfo addMemberInfosItem(ParticipantSetMemberInfo memberInfosItem) {
    if (this.memberInfos == null) {
      this.memberInfos = new ArrayList<ParticipantSetMemberInfo>();
    }
    this.memberInfos.add(memberInfosItem);
    return this;
  }

   /**
   * Array of ParticipantInfo objects, containing participant-specific data (email, e.g.) for all the additional participants in the web form. If the email of the participant is unknown at the time of web form creation, the email should be left empty, 
   * @return memberInfos
  **/
  @ApiModelProperty(value = "Array of ParticipantInfo objects, containing participant-specific data (email, e.g.) for all the additional participants in the web form. If the email of the participant is unknown at the time of web form creation, the email should be left empty, ")
  public List<ParticipantSetMemberInfo> getMemberInfos() {
    return memberInfos;
  }

  public void setMemberInfos(List<ParticipantSetMemberInfo> memberInfos) {
    this.memberInfos = memberInfos;
  }

  public WidgetAdditionalParticipationSetInfo order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Index indicating position at which signing group needs to sign. Additional participant to sign at first place is assigned a index of 1. Web Form participant should not have any order specified. Web Form participant should not have any email address and and can not have phone authentication applied. Different signingOrder specified in input should form a valid consecutive increasing sequence of integers. Otherwise signingOrder will be considered invalid,
   * @return order
  **/
  @ApiModelProperty(value = "Index indicating position at which signing group needs to sign. Additional participant to sign at first place is assigned a index of 1. Web Form participant should not have any order specified. Web Form participant should not have any email address and and can not have phone authentication applied. Different signingOrder specified in input should form a valid consecutive increasing sequence of integers. Otherwise signingOrder will be considered invalid,")
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WidgetAdditionalParticipationSetInfo widgetAdditionalParticipationSetInfo = (WidgetAdditionalParticipationSetInfo) o;
    return Objects.equals(this.providerParticipantSetInfo, widgetAdditionalParticipationSetInfo.providerParticipantSetInfo) &&
        Objects.equals(this.role, widgetAdditionalParticipationSetInfo.role) &&
        Objects.equals(this.memberInfos, widgetAdditionalParticipationSetInfo.memberInfos) &&
        Objects.equals(this.order, widgetAdditionalParticipationSetInfo.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providerParticipantSetInfo, role, memberInfos, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WidgetAdditionalParticipationSetInfo {\n");
    
    sb.append("    providerParticipantSetInfo: ").append(toIndentedString(providerParticipantSetInfo)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    memberInfos: ").append(toIndentedString(memberInfos)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

