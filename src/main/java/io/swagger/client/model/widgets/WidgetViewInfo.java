/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.widgets;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.widgets.CommonViewConfiguration;
import io.swagger.client.model.widgets.PersonalizedSigningViewConfiguration;
import java.io.IOException;

/**
 * WidgetViewInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:55.369+11:00")
public class WidgetViewInfo {
  @SerializedName("commonViewConfiguration")
  private CommonViewConfiguration commonViewConfiguration = null;

  /**
   * Name of the requested web form view
   */
  @JsonAdapter(NameEnum.Adapter.class)
  public enum NameEnum {
    AUTHORING("AUTHORING"),
    
    DOCUMENT("DOCUMENT"),
    
    MANAGE("MANAGE"),
    
    POST_CREATE("POST_CREATE"),
    
    SIGNING("SIGNING"),
    
    ALL("ALL");

    private String value;

    NameEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NameEnum fromValue(String text) {
      for (NameEnum b : NameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<NameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NameEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return NameEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("name")
  private NameEnum name = null;

  @SerializedName("personalizedSigningViewConfiguration")
  private PersonalizedSigningViewConfiguration personalizedSigningViewConfiguration = null;

  public WidgetViewInfo commonViewConfiguration(CommonViewConfiguration commonViewConfiguration) {
    this.commonViewConfiguration = commonViewConfiguration;
    return this;
  }

   /**
   * Common view configuration for all the available views
   * @return commonViewConfiguration
  **/
  @ApiModelProperty(value = "Common view configuration for all the available views")
  public CommonViewConfiguration getCommonViewConfiguration() {
    return commonViewConfiguration;
  }

  public void setCommonViewConfiguration(CommonViewConfiguration commonViewConfiguration) {
    this.commonViewConfiguration = commonViewConfiguration;
  }

  public WidgetViewInfo name(NameEnum name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the requested web form view
   * @return name
  **/
  @ApiModelProperty(value = "Name of the requested web form view")
  public NameEnum getName() {
    return name;
  }

  public void setName(NameEnum name) {
    this.name = name;
  }

  public WidgetViewInfo personalizedSigningViewConfiguration(PersonalizedSigningViewConfiguration personalizedSigningViewConfiguration) {
    this.personalizedSigningViewConfiguration = personalizedSigningViewConfiguration;
    return this;
  }

   /**
   * Personalized SIGNING view configuration
   * @return personalizedSigningViewConfiguration
  **/
  @ApiModelProperty(value = "Personalized SIGNING view configuration")
  public PersonalizedSigningViewConfiguration getPersonalizedSigningViewConfiguration() {
    return personalizedSigningViewConfiguration;
  }

  public void setPersonalizedSigningViewConfiguration(PersonalizedSigningViewConfiguration personalizedSigningViewConfiguration) {
    this.personalizedSigningViewConfiguration = personalizedSigningViewConfiguration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WidgetViewInfo widgetViewInfo = (WidgetViewInfo) o;
    return Objects.equals(this.commonViewConfiguration, widgetViewInfo.commonViewConfiguration) &&
        Objects.equals(this.name, widgetViewInfo.name) &&
        Objects.equals(this.personalizedSigningViewConfiguration, widgetViewInfo.personalizedSigningViewConfiguration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commonViewConfiguration, name, personalizedSigningViewConfiguration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WidgetViewInfo {\n");
    
    sb.append("    commonViewConfiguration: ").append(toIndentedString(commonViewConfiguration)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalizedSigningViewConfiguration: ").append(toIndentedString(personalizedSigningViewConfiguration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

