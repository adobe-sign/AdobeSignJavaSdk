/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.widgets;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.widgets.Document;
import io.swagger.client.model.widgets.URLFileInfo;
import java.io.IOException;

/**
 * FileInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:55.369+11:00")
public class FileInfo {
  @SerializedName("transientDocumentId")
  private String transientDocumentId = null;

  @SerializedName("document")
  private Document document = null;

  @SerializedName("urlFileInfo")
  private URLFileInfo urlFileInfo = null;

  public FileInfo transientDocumentId(String transientDocumentId) {
    this.transientDocumentId = transientDocumentId;
    return this;
  }

   /**
   * ID for a transient document that will be added to the web form
   * @return transientDocumentId
  **/
  @ApiModelProperty(value = "ID for a transient document that will be added to the web form")
  public String getTransientDocumentId() {
    return transientDocumentId;
  }

  public void setTransientDocumentId(String transientDocumentId) {
    this.transientDocumentId = transientDocumentId;
  }

  public FileInfo document(Document document) {
    this.document = document;
    return this;
  }

   /**
   * A document that is associated with the web form. This field cannot be provided in POST call. In case of GET call, this is the only field returned in the response
   * @return document
  **/
  @ApiModelProperty(value = "A document that is associated with the web form. This field cannot be provided in POST call. In case of GET call, this is the only field returned in the response")
  public Document getDocument() {
    return document;
  }

  public void setDocument(Document document) {
    this.document = document;
  }

  public FileInfo urlFileInfo(URLFileInfo urlFileInfo) {
    this.urlFileInfo = urlFileInfo;
    return this;
  }

   /**
   * URL for an external document to add to the agreement
   * @return urlFileInfo
  **/
  @ApiModelProperty(value = "URL for an external document to add to the agreement")
  public URLFileInfo getUrlFileInfo() {
    return urlFileInfo;
  }

  public void setUrlFileInfo(URLFileInfo urlFileInfo) {
    this.urlFileInfo = urlFileInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileInfo fileInfo = (FileInfo) o;
    return Objects.equals(this.transientDocumentId, fileInfo.transientDocumentId) &&
        Objects.equals(this.document, fileInfo.document) &&
        Objects.equals(this.urlFileInfo, fileInfo.urlFileInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transientDocumentId, document, urlFileInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileInfo {\n");
    
    sb.append("    transientDocumentId: ").append(toIndentedString(transientDocumentId)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    urlFileInfo: ").append(toIndentedString(urlFileInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

