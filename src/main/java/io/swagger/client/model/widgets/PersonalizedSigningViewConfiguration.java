/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.widgets;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * PersonalizedSigningViewConfiguration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:55.369+11:00")
public class PersonalizedSigningViewConfiguration {
  @SerializedName("comment")
  private String comment = null;

  @SerializedName("expiration")
  private Date expiration = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("reusable")
  private Boolean reusable = null;

  public PersonalizedSigningViewConfiguration comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment describing how the API caller established the signer&#39;s identity - will appear in the audit trail
   * @return comment
  **/
  @ApiModelProperty(value = "Comment describing how the API caller established the signer's identity - will appear in the audit trail")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public PersonalizedSigningViewConfiguration expiration(Date expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Expiration date for the personalization of this web form. After this date, the identity of the signer will not be assumed by Adobe Sign. Format should be yyyy-MM-dd&#39;T&#39;HH:mm:ssZ. For example, e.g 2022-02-25T18:46:19Z represents UTC time
   * @return expiration
  **/
  @ApiModelProperty(value = "Expiration date for the personalization of this web form. After this date, the identity of the signer will not be assumed by Adobe Sign. Format should be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2022-02-25T18:46:19Z represents UTC time")
  public Date getExpiration() {
    return expiration;
  }

  public void setExpiration(Date expiration) {
    this.expiration = expiration;
  }

  public PersonalizedSigningViewConfiguration email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email address of the person who will be receiving this web form
   * @return email
  **/
  @ApiModelProperty(value = "The email address of the person who will be receiving this web form")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public PersonalizedSigningViewConfiguration reusable(Boolean reusable) {
    this.reusable = reusable;
    return this;
  }

   /**
   * Should the intended signer be allowed to sign this web form more than once
   * @return reusable
  **/
  @ApiModelProperty(value = "Should the intended signer be allowed to sign this web form more than once")
  public Boolean isReusable() {
    return reusable;
  }

  public void setReusable(Boolean reusable) {
    this.reusable = reusable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalizedSigningViewConfiguration personalizedSigningViewConfiguration = (PersonalizedSigningViewConfiguration) o;
    return Objects.equals(this.comment, personalizedSigningViewConfiguration.comment) &&
        Objects.equals(this.expiration, personalizedSigningViewConfiguration.expiration) &&
        Objects.equals(this.email, personalizedSigningViewConfiguration.email) &&
        Objects.equals(this.reusable, personalizedSigningViewConfiguration.reusable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, expiration, email, reusable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalizedSigningViewConfiguration {\n");
    
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    reusable: ").append(toIndentedString(reusable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

