/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.megaSigns;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * MegaSignChildAgreement
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:44.788+11:00")
public class MegaSignChildAgreement {
  @SerializedName("displayDate")
  private Date displayDate = null;

  @SerializedName("esign")
  private Boolean esign = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("id")
  private String id = null;

  /**
   * The kind of agreement
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AGREEMENT("AGREEMENT"),
    
    MEGASIGN_CHILD("MEGASIGN_CHILD"),
    
    WIDGET_INSTANCE("WIDGET_INSTANCE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("parentId")
  private String parentId = null;

  /**
   * This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    WAITING_FOR_MY_SIGNATURE("WAITING_FOR_MY_SIGNATURE"),
    
    WAITING_FOR_MY_APPROVAL("WAITING_FOR_MY_APPROVAL"),
    
    WAITING_FOR_MY_DELEGATION("WAITING_FOR_MY_DELEGATION"),
    
    WAITING_FOR_MY_ACKNOWLEDGEMENT("WAITING_FOR_MY_ACKNOWLEDGEMENT"),
    
    WAITING_FOR_MY_ACCEPTANCE("WAITING_FOR_MY_ACCEPTANCE"),
    
    WAITING_FOR_MY_FORM_FILLING("WAITING_FOR_MY_FORM_FILLING"),
    
    OUT_FOR_SIGNATURE("OUT_FOR_SIGNATURE"),
    
    OUT_FOR_APPROVAL("OUT_FOR_APPROVAL"),
    
    OUT_FOR_DELIVERY("OUT_FOR_DELIVERY"),
    
    OUT_FOR_ACCEPTANCE("OUT_FOR_ACCEPTANCE"),
    
    OUT_FOR_FORM_FILLING("OUT_FOR_FORM_FILLING"),
    
    SIGNED("SIGNED"),
    
    APPROVED("APPROVED"),
    
    FORM_FILLED("FORM_FILLED"),
    
    DELIVERED("DELIVERED"),
    
    ACCEPTED("ACCEPTED"),
    
    ARCHIVED("ARCHIVED"),
    
    CANCELLED("CANCELLED"),
    
    EXPIRED("EXPIRED"),
    
    WAITING_FOR_AUTHORING("WAITING_FOR_AUTHORING"),
    
    WAITING_FOR_PREFILL("WAITING_FOR_PREFILL"),
    
    DRAFT("DRAFT"),
    
    DOCUMENTS_NOT_YET_PROCESSED("DOCUMENTS_NOT_YET_PROCESSED"),
    
    WAITING_FOR_MY_VERIFICATION("WAITING_FOR_MY_VERIFICATION"),
    
    WAITING_FOR_VERIFICATION("WAITING_FOR_VERIFICATION");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public MegaSignChildAgreement displayDate(Date displayDate) {
    this.displayDate = displayDate;
    return this;
  }

   /**
   * The display date for the agreement. Format would be yyyy-MM-dd&#39;T&#39;HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time
   * @return displayDate
  **/
  @ApiModelProperty(value = "The display date for the agreement. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time")
  public Date getDisplayDate() {
    return displayDate;
  }

  public void setDisplayDate(Date displayDate) {
    this.displayDate = displayDate;
  }

  public MegaSignChildAgreement esign(Boolean esign) {
    this.esign = esign;
    return this;
  }

   /**
   * True if this is an e-sign document
   * @return esign
  **/
  @ApiModelProperty(value = "True if this is an e-sign document")
  public Boolean isEsign() {
    return esign;
  }

  public void setEsign(Boolean esign) {
    this.esign = esign;
  }

  public MegaSignChildAgreement name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Agreement
   * @return name
  **/
  @ApiModelProperty(value = "Name of the Agreement")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MegaSignChildAgreement id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the agreement.If provided in POST, it will simply be ignored
   * @return id
  **/
  @ApiModelProperty(value = "The unique identifier of the agreement.If provided in POST, it will simply be ignored")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MegaSignChildAgreement type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The kind of agreement
   * @return type
  **/
  @ApiModelProperty(value = "The kind of agreement")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public MegaSignChildAgreement parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * The parent id of a megaSign child *OR* the originating id of a widget agreement instance
   * @return parentId
  **/
  @ApiModelProperty(value = "The parent id of a megaSign child *OR* the originating id of a widget agreement instance")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public MegaSignChildAgreement status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller
   * @return status
  **/
  @ApiModelProperty(value = "This is a server generated attribute which provides the detailed status of an agreement with respect to the apiCaller")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MegaSignChildAgreement megaSignChildAgreement = (MegaSignChildAgreement) o;
    return Objects.equals(this.displayDate, megaSignChildAgreement.displayDate) &&
        Objects.equals(this.esign, megaSignChildAgreement.esign) &&
        Objects.equals(this.name, megaSignChildAgreement.name) &&
        Objects.equals(this.id, megaSignChildAgreement.id) &&
        Objects.equals(this.type, megaSignChildAgreement.type) &&
        Objects.equals(this.parentId, megaSignChildAgreement.parentId) &&
        Objects.equals(this.status, megaSignChildAgreement.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayDate, esign, name, id, type, parentId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MegaSignChildAgreement {\n");
    
    sb.append("    displayDate: ").append(toIndentedString(displayDate)).append("\n");
    sb.append("    esign: ").append(toIndentedString(esign)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

