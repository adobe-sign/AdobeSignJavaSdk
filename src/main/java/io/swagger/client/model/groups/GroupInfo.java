/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.groups;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * GroupInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T13:23:40.217+11:00")
public class GroupInfo {
  @SerializedName("isDefaultGroup")
  private Boolean isDefaultGroup = null;

  @SerializedName("groupName")
  private String groupName = null;

  @SerializedName("createdDate")
  private Date createdDate = null;

  @SerializedName("groupId")
  private String groupId = null;

  public GroupInfo isDefaultGroup(Boolean isDefaultGroup) {
    this.isDefaultGroup = isDefaultGroup;
    return this;
  }

   /**
   * Is the default group for the account
   * @return isDefaultGroup
  **/
  @ApiModelProperty(value = "Is the default group for the account")
  public Boolean isIsDefaultGroup() {
    return isDefaultGroup;
  }

  public void setIsDefaultGroup(Boolean isDefaultGroup) {
    this.isDefaultGroup = isDefaultGroup;
  }

  public GroupInfo groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

   /**
   * Name of the group
   * @return groupName
  **/
  @ApiModelProperty(value = "Name of the group")
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  public GroupInfo createdDate(Date createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Date group was created
   * @return createdDate
  **/
  @ApiModelProperty(value = "Date group was created")
  public Date getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Date createdDate) {
    this.createdDate = createdDate;
  }

  public GroupInfo groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Unique identifier of the group
   * @return groupId
  **/
  @ApiModelProperty(value = "Unique identifier of the group")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupInfo groupInfo = (GroupInfo) o;
    return Objects.equals(this.isDefaultGroup, groupInfo.isDefaultGroup) &&
        Objects.equals(this.groupName, groupInfo.groupName) &&
        Objects.equals(this.createdDate, groupInfo.createdDate) &&
        Objects.equals(this.groupId, groupInfo.groupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isDefaultGroup, groupName, createdDate, groupId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupInfo {\n");
    
    sb.append("    isDefaultGroup: ").append(toIndentedString(isDefaultGroup)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

